import sys
from collections import deque

N , M, V = map(int,sys.stdin.readline().split())
Root_list = [[] for _ in range(N+1)]

for _ in range(M):
    x, y = map(int, sys.stdin.readline().split())
    Root_list[x].append(y)
    Root_list[y].append(x)

for i in range(1,N+1):
    Root_list[i].sort()

visited = [False] * (N+1)


def DFS(x):
    visited[x] = True
    print(x,end=" ")
    for i in Root_list[x]:
        if not visited[i]:
            DFS(i)
    
DFS(V)
print()


visited = [False] * (N+1)

def BFS(x):
    queue = deque()
    queue.append(x)
    visited[x] = True
    while queue:
        pop_value = queue.popleft()
        print(pop_value, end=' ')
        for i in Root_list[pop_value]:
            if (not visited[i]):
                queue.append(i)
                visited[i] = True

BFS(V)
